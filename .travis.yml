# Note: If there are dependent packages only for testing, this script will fail
#       because this installs dependency without setting OPAMBUILDTEST.
#       There is a workaround for this problem, but now I don't implement it for simplicity.
#       See: https://github.com/ocaml/opam/issues/2506

language: c
sudo: required
services:
  - docker
matrix:
  include:
    - os: osx
      env: OCAML_VERSION="4.06.0"
    - os: linux
      env: DISTRO="alpine" OCAML_VERSION="4.05.0"
    - os: linux
      env: DISTRO="alpine" OCAML_VERSION="4.06.0"
    - os: linux
      env: DISTRO="ubuntu-16.04" OCAML_VERSION="4.06.0"
env:
  global:
    - PACKAGE="satysfi"
    - TESTS="true"
    # for osx
    - OPAMYES="true"
    - OPAMJOBS=2
before_script: |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]] ; then
    # for linux like alpine and ubuntu
    # prepare Dockerfile
    export DOCKERFILE="travis-Dockerfile.tpl" ;
    sed -i "s/%distro%/${DISTRO}/g"               "${DOCKERFILE}" ;
    sed -i "s/%ocaml_version%/${OCAML_VERSION}/g" "${DOCKERFILE}" ;
    sed -i "s/%opambuildtest%/${TESTS}/g"         "${DOCKERFILE}" ;
    sed -i "s/%package%/${PACKAGE}/g"             "${DOCKERFILE}" ;
    cat "${DOCKERFILE}" ;
  else
    # for osx
    # download and install OPAM
    brew update > /dev/null ;
    brew install aspcud ;
    wget -O /usr/local/bin/opam https://github.com/ocaml/opam/releases/download/1.2.2/opam-1.2.2-x86_64-Darwin ;
    chmod +x /usr/local/bin/opam ;
    opam init --compiler="${OCAML_VERSION}" ;
    eval `opam config env` ;
    opam install depext ;
    
    # install dependency
    opam pin add --no-action "${PACKAGE}.dev" . ;
    opam depext "${PACKAGE}.dev" ;
    opam install --deps-only "${PACKAGE}.dev" ;
  fi
script: |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]] ; then
    docker build --file "${DOCKERFILE}" --tag satysfi/satysfi:travis . ;
  else
    OPAMBUILDTEST="${TESTS}" opam install "${PACKAGE}.dev" ;
  fi
